trigger:
- main

pool:
  name: default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# Restore dependencies
- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Run tests and collect code coverage
- task: DotNetCoreCLI@2
  displayName: 'Testing and code coverage'
  inputs:
    command: 'test'
    projects: '**/webtest.csproj'
    arguments: '/p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/coverage/ /p:CoverletOutputFormat=cobertura'
    publishTestResults: true

# Debug coverage file location
- script: |
    echo "Checking coverage file..."
    ls $(Build.SourcesDirectory)/coverage/
  displayName: 'Debug coverage file location'

# Publish code coverage results
- task: PublishCodeCoverageResults@2
  displayName: 'Publish code coverage results'
  inputs:
    summaryFileLocation: '$(Build.SourcesDirectory)/coverage/coverage.cobertura.xml'

# Publish the build artifacts
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
